apply plugin: 'com.android.application'
apply plugin: 'walle'

walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels");
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk';
    // 渠道配置文件
    channelFile = new File("${project.getProjectDir()}/channel")
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "fanhua.com.umengstastics"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk{
            moduleName "uninstall" //生成so的名称
            abiFilters "arm64-v8a", "armeabi-v7a", "x86","x86_64"   //输出制定三种abi体系结构下的so库
        }

        sourceSets.main {
            jni.srcDirs = [] //disable automatic ndk-build call
        }
    }

    //正常的使用jni的步骤会提示不再支持ndk编译,报错提示会给出Android.mk的位置，请将Android.mk文件copy到jni目录下,然后将下面的externalNativeBuild节点添加到android节点下,path为Android.mk的路径
    externalNativeBuild{
        ndkBuild{
            path "src/main/jni/Android.mk"
        }
    }

    lintOptions {
        checkReleaseBuilds false
    }

    signingConfigs {
        yanxiaosa {
            storeFile file("../yxs_umeng.jks")
            storePassword "yanxiaosa"
            keyAlias "yanxiaosa"
            keyPassword "yanxiaosa"
        }

        release {
            storeFile file("../yxs_umeng.jks")
            storePassword "yanxiaosa"
            keyAlias "yanxiaosa"
            keyPassword "yanxiaosa"
        }
    }

    buildTypes {
        yanxiaosa {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.yanxiaosa
        }

        release{
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    productFlavors{
        productFlavors.all{
            flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_NAME:name]
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0-rc02'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    implementation 'com.meituan.android.walle:library:1.1.6'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'

    implementation 'com.umeng.sdk:common:latest.integration'
    implementation 'com.umeng.sdk:common:latest.integration'
    implementation 'com.umeng.sdk:analytics:latest.integration'
//    implementation 'com.umeng.sdk:common:1.5.0'
    implementation 'com.umeng.sdk:analytics:7.5.0'
    implementation 'com.liulishuo.filedownloader:library:1.7.5'

    //PushSDK必须依赖基础组件库，所以需要加入对应依赖
    implementation 'com.umeng.sdk:common:1.5.3'
    //PushSDK必须依赖utdid库，所以需要加入对应依赖
    implementation 'com.umeng.sdk:utdid:1.1.5.3'
    //PushSDK
    implementation 'com.umeng.sdk:push:4.2.0'

//    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '8.5.23'
}
